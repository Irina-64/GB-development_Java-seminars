Урок 2. Почему вы не можете не использовать API
Формат сдачи: ссылка на подписанный git-проект.

Задание

1) Напишите метод, который определит тип (расширение) файлов из текущей папки и выведет в консоль результат вида
1 Расширение файла: txt
2 Расширение файла: pdf
3 Расширение файла:
4 Расширение файла: jpg

2) Реализуйте алгоритм сортировки пузырьком числового массива, результат после каждой итерации запишите в лог-файл.

Дополнительные задания

3) Дана json-строка (можно сохранить в файл и читать из файла)
файл data.json:
[{"фамилия":"Иванов","оценка":"5","предмет":"Математика"},{"фамилия":"Петрова","оценка":"4","предмет":"Информатика"},{"фамилия":"Краснов","оценка":"5","предмет":"Физика"}]

Написать метод(ы), который распарсит json и, используя StringBuilder, создаст строки вида: Студент [фамилия] получил [оценка] по предмету [предмет].
Пример вывода:
Студент Иванов получил 5 по предмету Математика.
Студент Петрова получил 4 по предмету Информатика.
Студент Краснов получил 5 по предмету Физика.

Решение: Для решения данной задачи используем библиотеку для работы с JSON. 
В Java одной из популярных библиотек для работы с JSON является json-simple.

Первым шагом нужно добавить зависимость на json-simple в проект (в данной реализации - на Maven). 
Добавим следующую зависимость в файл pom.xml:
<dependency>
    <groupId>com.googlecode.json-simple</groupId>
    <artifactId>json-simple</artifactId>
    <version>1.1.1</version>
</dependency>

Затем, создаем метод, который будет выполнять следующие действия:

1. Прочитать JSON-строку из файла или использовать ее напрямую.
2. Распарсить JSON-строку в объекты JSON.
3. Создать строки вида "Студент [фамилия] получил [оценка] по предмету [предмет]" с помощью StringBuilder.
4. Вывести полученные строки на экран или использовать их по вашему усмотрению.

Пример реализации метода показан в файле hw023_jsonParser.java

В этом примере JSON-строка считывается из файла "data.json" с помощью метода readJsonFromFile(). 
Затем JSON-строка парсится с использованием JSONParser из библиотеки json-simple. 
Результаты парсинга выводятся на экран с помощью System.out.println(). 
В этом примере файл, где сохранена JSON-строка, расположен в одной директории с hw023_jsonParser.java.

После запуска данного примера, результат будет выведен в консоль в требуемом формате:
Студент Иванов получил 5 по предмету Математика.
Студент Петрова получил 4 по предмету Информатика.
Студент Краснов получил 5 по предмету Физика.


4) К калькулятору из предыдущего ДЗ добавить логирование.

5) Дана строка sql-запроса "select * from students where ". Сформируйте часть WHERE этого запроса, используя StringBuilder. Данные для фильтрации приведены ниже в виде json-строки.
Если значение null, то параметр не должен попадать в запрос.
Параметры для фильтрации: {"name":"Ivanov", "country":"Russia", "city":"Moscow", "age":"null"}
